<!DOCTYPE html>
<html lang="zh-TW">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>我的歷史訂單</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/vue@2.7.16"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
  integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      blocklist: [
        "container",
      ]
    }
  </script>
  <style>
    .collapse {
      visibility: visible !important;
    }

    #search-wrapper {
      display: none !important;
    }
  </style>
</head>

<body class="bg-gray-100">
  <%- include('../template/_nav', { action: '' } ) %> 
  <div class="container mx-auto py-6 min-h-screen" id="app">
    <h1 class="text-3xl font-bold mb-6 text-gray-800">您的訂單</h1>
    <div class="mb-6">
      <label class="block text-sm font-medium text-gray-700 mb-2">
        過濾訂單狀態：
      </label>
      <select 
        v-model="currentMode"
        class="block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
        @change="fetchOrders"
      >
        <option v-for="mode in modes" :value="mode.value">
          {{ mode.name }}
        </option>
      </select>
    </div>
    <div class="space-y-6">
      <div 
        v-for="order in orders" 
        class="bg-white rounded-lg shadow-md overflow-hidden cursor-pointer" 
        @click="order.expanded = !order.expanded"
      >
        <div class="p-6">
          <div class="flex justify-between items-center mb-4">
            <h2 class="text-xl font-semibold text-gray-800">
              訂單 #{{ order.oId }}
            </h2>
            <span class="px-3 py-1 rounded-full text-sm font-medium" :class="statusColors[order.status]">
              {{ statusTranslations[order.status] }}
            </span>
          </div>
          <div class="flex justify-between text-gray-600 mb-4">
            <span>日期: {{ order.oDate }}</span>
            <span>總計: ${{ order.total.toFixed(2) }}</span>
          </div>
          <button 
            class="flex items-center text-blue-600 hover:text-blue-800 transition-colors duration-200"
            @click.stop="order.expanded = !order.expanded"
          >
            <template v-if="!order.expanded">
              <i class="fas fa-chevron-down"></i>
              <span class="ml-2">顯示詳情
            </template>
            <template v-else>
              <i class="fas fa-chevron-up"></i>
              <span class="ml-2">隱藏詳情
            </template>
          </button>
        </div>
        <div class="px-6 pb-6" v-if="order.expanded" @click.stop>
          <div class="overflow-x-auto">
            <table class="w-full text-left">
              <thead>
                <tr class="border-b">
                  <th class="py-2 px-3 text-left align-middle font-medium text-muted-foreground">商品</th>
                  <th class="py-2 px-2 text-left align-middle font-medium text-muted-foreground">數量</th>
                  <th class="py-2 px-2 text-left align-middle font-medium text-muted-foreground">價格</th>
                </tr>
              </thead>
              <tbody>
                <tr class="border-b last:border-b-0 hover:bg-[#6b7280]/10" v-for="item in order.items">
                  <td class="py-3 px-3 flex items-center">
                    <div class="w-20 h-20 mr-4 relative flex-shrink-0 object-cover overflow-hidden">
                      <img 
                        :src="item.image ? `/upload/${item.image}` :'/public/assets/placeholder.jpg'" 
                        class="rounded-md w-20 h-20" 
                      />
                    </div>
                    <span>{{ item.pName }}</span>
                  </td>
                  <td class="px-2">{{ item.count }}</td>
                  <td class="px-2">${{ item.price }}</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
<script async="" src="https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js"
  integrity="sha384-GNFwBvfVxBkLMJpYMOABq3c+d3KnQxudP/mGPkzpZSTYykLBNsZEnG2D9G/X/+7D" crossorigin="anonymous"></script>
<script>
  const app = new Vue({
    el: '#app',
    data: {
      currentMode: 'ALL',
      modes: [
        { name: '全部', value: 'ALL' },
        { name: '待處理', value: 'Pending' },
        { name: '準備中', value: 'Preparing' },
        { name: '已出貨', value: 'Shipped' },
        { name: '已完成', value: 'Completed' },
        { name: '已取消', value: 'Cancelled' },
      ],
      orders: [],
      statusTranslations: {
        Pending: '待處理',
        Preparing: '準備中',
        Shipped: '已出貨',
        Completed: '已完成',
        Cancelled: '已取消',
      },
      statusColors: {
        Pending: 'bg-yellow-100 text-yellow-800',
        Preparing: 'bg-gray-100 text-gray-800',
        Shipped: 'bg-blue-100 text-blue-800',
        Completed: 'bg-green-100 text-green-800',
        Cancelled: 'bg-red-100 text-red-800',
      },
    },
    methods: {
      async fetchOrders() {
        try {
          const data = await fetch(`/api/orders?status=${this.currentMode}`).then(res => res.json())
          this.orders = data.map(order => ({
            ...order,
            expanded: false
          }))
        } catch (error) {
          alert('無法取得訂單資料')
        }
      }
    },
    created() {
      this.fetchOrders()
    },

  })
</script>

</html>