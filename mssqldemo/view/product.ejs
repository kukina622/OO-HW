<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- <link rel="canonical" href="https://getbootstrap.com/docs/5.2/examples/masonry/"> -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.2/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/vue@2.7.16"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      blocklist: [
        "container",
        "collapse"
      ],
      prefix: 'tw-',
    }
  </script>
  <style>
    .card {
      margin-bottom: 20px;
    }

    .card-link {
      text-decoration: none;
    }

    .btn.btn-link {
      padding: 0 10px 0 0;
      text-decoration: none;
    }
    .img-wrapper {
      width: 100%;
      object-fit: cover;
      overflow: hidden;
      aspect-ratio: 214 / 144
    }

    .list-enter-active, .list-leave-active {
      transition: all 1s;
    }

    .list-enter, .list-leave-to {
      opacity: 0;
    }

    .list-leave-to {
      display: none;
    }

    .list-leave, .list-enter-to {
      opacity: 1;
    }


  </style>
  <title>產品</title>
  <% if (typeof errorType !== 'undefined'){%>
    <script>
      alert(`<%= typeof message !== 'undefined' ? message : "發生錯誤" %>` )
      window.location.href = '/product'
    </script>
  <% } %>
</head>

<body>
  <%- include('template/_nav', {action: 'product'}) %> 
  <div class="container tw-mx-auto tw-px-4 tw-py-8" id="app">
    <transition-group 
      name="list" 
      tag="div" 
      class="tw-grid tw-grid-cols-1 md:tw-grid-cols-2 lg:tw-grid-cols-3 xl:tw-grid-cols-4 tw-gap-8 transition"
    >
      <div 
        v-for="(product, index) in products"
        class="tw-bg-white tw-rounded-lg tw-shadow-md tw-overflow-hidden"
        :key="product.pId + filterKey"
      >
        <div class="img-wrapper">
          <img class="card-img-top" :src="getImageSrc(product.image)">
        </div>
        <div class="tw-p-4">
          <div>
            <h2 class="tw-text-lg tw-font-semibold tw-mb-2">{{ product.pName || "&nbsp;" }}</h2>
            <p class="tw-text-xl tw-font-bold tw-text-gray-700">${{ product.unitPrice }}</p>
          </div>
          <div class="tw-flex tw-items-center tw-mt-4 tw-space-x-2">
            <input
              v-model="product.buyCount"
              type="number"
              min="1"
              value="1"
              class="tw-w-[30%] tw-border tw-border-gray-300 tw-rounded-md tw-px-2 tw-py-2 focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-gray-400"
            />
            <button 
              @click="addToCart(product)"
              class="tw-flex-grow tw-text-white tw-px-4 tw-py-2 tw-rounded-md focus:tw-outline-none focus:tw-ring-2 focus:tw-ring-gray-400 focus:tw-ring-offset-2 tw-transition-all tw-duration-200"
              :class="product.isAdded ? 'tw-bg-green-500 hover:tw-bg-green-600 tw-border-green-800' : 'tw-bg-gray-800 hover:tw-bg-gray-700 tw-border-gray-800'"
              :disabled="product.isAdded"
            >
              <template v-if="product.isAdded">
                <i class="bi bi-cart-check-fill tw-mr-2"></i>
                加入成功
              </template>
              <template v-else>
                <i class="bi bi-cart-fill tw-mr-2 "></i>
                加入購物車  
              </template>
            </button>
          </div>
        </div>
      </div>
    </transition-group>
  </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
<script async="" src="https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js"
  integrity="sha384-GNFwBvfVxBkLMJpYMOABq3c+d3KnQxudP/mGPkzpZSTYykLBNsZEnG2D9G/X/+7D" crossorigin="anonymous"></script>
<script>
  const ssrData = `<%- JSON.stringify(data) %>`
  const app = new Vue({
    el: '#app',
    data: {
      products: [],
      filterKey: '',
    },
    methods: {
      getImageSrc(image) {
        return image ? `/upload/${image}` :'/public/assets/placeholder.jpg'
      },
      async addToCart(product) {
        try {
          const buyCount = parseInt(product.buyCount)
          const pId = product.pId

          if (buyCount <= 0) {
            alert('請輸入大於1的數字')
            product.buyCount = 1
            return
          }

          if (isNaN(buyCount)) {
            alert('請輸入數字')
            product.buyCount = 1
            return
          }

          const url = `/api/cart/add/${pId}/${buyCount}`
          const res = await fetch(url, options)
          const json = await res.json()
          if (json.result === 'ok') {
            product.isAdded = true
            product.buyCount = 1
            return
          } 
          
          if (json.error) {
            alert(json.error || '發生錯誤')
          }
        } catch (error) {
          
        } finally {
          setTimeout(() => {
            product.isAdded = false
          }, 2000)
        }
      },
      setProductsWithAnime(products) {
        this.filterKey = Math.random().toString()
        this.products = products.map(product => ({
          ...product,
          buyCount: 1,
          isAdded: false
        }))
      }
    },
    mounted() {
      this.products = JSON.parse(ssrData)
      this.products = this.products.map(product => ({
        ...product,
        buyCount: 1,
        isAdded: false
      }))
    },
  })

  const render = (json) => {
    app.setProductsWithAnime(json)
  }
</script>

</html>